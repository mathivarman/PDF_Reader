# Generated by Django 4.2.7 on 2025-08-13 04:35

from django.db import migrations, models
import django.db.models.deletion
import main.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Analysis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('analysis_type', models.CharField(choices=[('summary', 'Summary'), ('clauses', 'Clauses'), ('red_flags', 'Red Flags'), ('qa', 'Q&A')], max_length=20)),
                ('content', models.JSONField(default=dict, help_text='Structured analysis results')),
                ('confidence_score', models.FloatField(default=0.0, help_text='AI confidence score (0-1)')),
                ('processing_time', models.FloatField(default=0.0, help_text='Processing time in seconds')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Analysis',
                'verbose_name_plural': 'Analyses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('original_filename', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to=main.models.document_upload_path)),
                ('file_size', models.BigIntegerField(help_text='File size in bytes')),
                ('pages', models.IntegerField(default=0, help_text='Number of pages in the document')),
                ('status', models.CharField(choices=[('uploaded', 'Uploaded'), ('processing', 'Processing'), ('processed', 'Processed'), ('error', 'Error')], default='uploaded', max_length=20)),
                ('processing_started', models.DateTimeField(blank=True, null=True)),
                ('processing_completed', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('extracted_text', models.TextField(blank=True)),
                ('text_extraction_method', models.CharField(blank=True, help_text='OCR or direct extraction', max_length=50)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_id', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('documents', models.ManyToManyField(related_name='sessions', to='main.document')),
            ],
            options={
                'verbose_name': 'User Session',
                'verbose_name_plural': 'User Sessions',
                'ordering': ['-last_activity'],
            },
        ),
        migrations.CreateModel(
            name='RedFlag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('risk_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=10)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(help_text='Description of the risk')),
                ('reason', models.TextField(help_text='Why this is flagged as risky')),
                ('recommendation', models.TextField(blank=True, help_text='Recommended action')),
                ('page_number', models.IntegerField(default=0)),
                ('start_position', models.IntegerField(default=0)),
                ('end_position', models.IntegerField(default=0)),
                ('snippet', models.TextField(help_text='Extracted text snippet')),
                ('confidence_score', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='red_flags', to='main.analysis')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='red_flags', to='main.document')),
            ],
            options={
                'verbose_name': 'Red Flag',
                'verbose_name_plural': 'Red Flags',
                'ordering': ['-risk_level', 'page_number'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question_text', models.TextField()),
                ('answer', models.TextField(blank=True)),
                ('confidence_score', models.FloatField(default=0.0)),
                ('citations', models.JSONField(default=list, help_text='List of source citations')),
                ('processing_time', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='main.document')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Clause',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('clause_type', models.CharField(choices=[('termination', 'Termination'), ('auto_renewal', 'Auto-renewal'), ('penalties', 'Penalties'), ('confidentiality', 'Confidentiality'), ('liability', 'Liability'), ('jurisdiction', 'Jurisdiction'), ('arbitration', 'Arbitration'), ('force_majeure', 'Force Majeure'), ('other', 'Other')], max_length=20)),
                ('importance', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('title', models.CharField(max_length=255)),
                ('snippet', models.TextField(help_text='Extracted text snippet')),
                ('page_number', models.IntegerField(default=0)),
                ('start_position', models.IntegerField(default=0)),
                ('end_position', models.IntegerField(default=0)),
                ('confidence_score', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clauses', to='main.analysis')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clauses', to='main.document')),
            ],
            options={
                'verbose_name': 'Clause',
                'verbose_name_plural': 'Clauses',
                'ordering': ['page_number', 'start_position'],
            },
        ),
        migrations.AddField(
            model_name='analysis',
            name='document',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analyses', to='main.document'),
        ),
        migrations.CreateModel(
            name='DocumentChunk',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('chunk_text', models.TextField()),
                ('chunk_index', models.IntegerField()),
                ('page_number', models.IntegerField()),
                ('embedding', models.JSONField(default=list, help_text='Vector embedding of the chunk')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chunks', to='main.document')),
            ],
            options={
                'verbose_name': 'Document Chunk',
                'verbose_name_plural': 'Document Chunks',
                'ordering': ['page_number', 'chunk_index'],
                'unique_together': {('document', 'chunk_index')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='analysis',
            unique_together={('document', 'analysis_type')},
        ),
    ]
